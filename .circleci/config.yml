version: 2.1

workflows:
  build-and-deploy:
    jobs:
      - build:
          filters:
            branches:
              only:
                - main
      - deploy:
          requires:
            - build
          filters:
            branches:
              only: 
                - main

jobs:
  build:
    working_directory: ~/ExampleApplication-20250204
    docker:
      - image: cimg/node:18.19.0
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
      - run:
          name: install-npm
          command: npm install
      - run:
          name: test-run
          command: npm run test
      - save_cache:
          key: dependency-cache-{{ checksum "package-lock.json" }}
          paths:
            - ./node_modules
  deploy:
    docker:
      - image: cimg/node:18.19.0
    steps:
      - checkout
      # Since we have the SHA256 fingerprint instead of MD5, let's use the key directly
      - run:
          name: Setup SSH
          command: |
            mkdir -p ~/.ssh
            # Create SSH key file - use an environment variable called SSH_PRIVATE_KEY_FILE 
            # that contains the entire private key with proper line breaks
            echo "$SSH_PRIVATE_KEY_FILE" > ~/.ssh/id_rsa
            chmod 600 ~/.ssh/id_rsa
            
            # Add EC2 host to known hosts
            ssh-keyscan -H $EC2_PUBLIC_DNS >> ~/.ssh/known_hosts
            
            # Verify key is readable
            ls -la ~/.ssh/
            
            echo "Testing key format:"
            ssh-keygen -l -f ~/.ssh/id_rsa
      - run:
          name: deploy-application
          command: |
            echo "Testing SSH connection:"
            ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "echo 'SSH connection successful'"
            
            echo "Proceeding with deployment:"
            ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_PUBLIC_DNS "rm -rf ExampleApplication/;git clone https://github.com/SNNCI/ExampleApplication.git; source ExampleApplication/deploy.sh"